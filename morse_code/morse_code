import base64


def to_morse_code(text):
    code = {' ': '|', 'a': '. ', 'b': ' . . .', 'c': '_ . _ .', 'd': '_ . .', 'e': '.', 'f': '. . _ .',
            'g': '_ .', 'h': '. . . .', 'i': '. .', 'j': '. _ _ _', 'k': ' . ', 'l': '. _ . .', 'm': ' _',
            'n': '_ .', 'o': '_ _ ', 'p': '. _ _ .', 'q': ' _ . ', 'r': '. _ .', 's': '. . .', 't': '',
            'u': '. . ', 'v': '. . . _', 'w': '. _ _', 'x': ' . . ', 'y': ' . _ ', 'z': ' _ . .',
            '1': '. _ _ _ _', '2': '. . _ _ _', '3': '. . . _ _', '4': '. . . . _', '5': '. . . . .',
            '6': '_ . . . .', '7': '_ _ . . .', '8': '_ _ _ . .', '9': '_ _ _ _ .', '0': '_ _ _ _ _'}
    morse_code = ""

    for x in text:
        morse_code += code[x.lower()]

    return morse_code


text64 = input("Enter the code you want to decrypt: ")
# print(to_morse_code(text))
text64 += "=" * ((4 - len(text64) % 4) % 4)
text64 = base64.standard_b64decode(text64).decode("utf-8")
# print

rot13 = text64.upper()
key = 13
decryp_text = ""

for i in range(len(rot13)):
    temp = ord(rot13[i]) - key
    if ord(rot13[i]) == 32:
        decryp_text += " "
    elif temp < 65:
        temp += 26
        decryp_text += chr(temp)
    else:
        decryp_text += chr(temp)

print("The Decrypted message is ", decryp_text)
print("In Morse Code", to_morse_code(decryp_text))

